name: Go

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    environment: DEV
    env:
      # Variáveis para docker-compose e aplicação Go
      DB_USER: ${{ vars.DB_USER_DEV }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD_DEV }}
      DB_NAME: ${{ vars.DB_NAME_DEV }}
      DB_PORT: ${{ vars.DB_PORT_DEV }}
    strategy:
      matrix:
        go_version: ["1.21", "1.20"]
        os: ["ubuntu-latest"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go_version }}

      - name: Build Go Application
        run: go build -v -o main main.go

      - name: Build-DB
        run: docker compose build

      - name: Create-DB
        run: docker compose up -d

      - name: Wait for PostgreSQL
        run: |
          echo "Aguardando PostgreSQL iniciar..."
          for i in {1..30}; do
            if docker compose exec -T postgres pg_isready -U ${DB_USER} -h localhost; then
              echo "PostgreSQL está pronto!"
              break
            fi
            echo "Tentativa $i/30..."
            sleep 2
          done

      - name: Test
        run: go test -v main_test.go

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: go build -v main.go

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: programa
          # A file, directory or wildcard pattern that describes what to upload
          path: main

  docker:
    needs: build
    uses: ./.github/workflows/Docker.yml
    secrets: inherit

  Deploy_EC2:
    needs: docker
    uses: ./.github/workflows/EC2.yml
    secrets: inherit

  Deploy_ECS:
    needs: docker
    uses: ./.github/workflows/ECS.yml
    secrets: inherit

  #LoadTest:
  # needs: docker
  # if: ${{ github.ref_name =='Homolog' }}
  # uses: ./.github/workflows/LoadTest.yml
  # secrets: inherit

  # Deploy to EKS Production
  # Deploy_EKS_Prod:
  #   needs: docker
  #   if: ${{ github.ref_name == 'main' }}
  #   uses: ./.github/workflows/EKS.yml
  #   with:
  #     environment: prod
  #     docker_image_tag: ${{ github.run_number }}
  #   secrets: inherit

  # # Deploy to EKS Staging
  # Deploy_EKS_Staging:
  #   needs: docker
  #   if: ${{ github.ref_name == 'develop' }}
  #   uses: ./.github/workflows/EKS.yml
  #   with:
  #     environment: staging
  #     docker_image_tag: ${{ github.run_number }}
  #   secrets: inherit
