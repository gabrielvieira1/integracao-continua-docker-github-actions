services:
  # PostgreSQL - serve como dev local e simula√ß√£o RDS
  postgres:
    image: postgres:15
    container_name: postgres_ci
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${DB_USER:-root}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-root}
      - POSTGRES_DB=${DB_NAME:-root}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-root}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Aplica√ß√£o - modo desenvolvimento (build local)
  app-dev:
    build: .
    container_name: go_app_dev
    ports:
      - "${APP_PORT:-8000}:8000"
    environment:
      - HOST=postgres
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD:-root}
      - DB_NAME=${DB_NAME:-root}
      - DB_PORT=5432
      - PORT=8000
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - dev

  # Aplica√ß√£o - modo deploy (simula√ß√£o EC2 com binary est√°tico)
  app-deploy:
    image: alpine:3.18
    container_name: go_app_deploy
    ports:
      - "${APP_PORT:-8080}:8000"
    environment:
      - HOST=postgres
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD:-root}
      - DB_NAME=${DB_NAME:-root}
      - DB_PORT=5432
      - PORT=8000
    volumes:
      - .:/app
    working_dir: /app
    command: >
      sh -c "
        echo 'üöÄ Simula√ß√£o Deploy EC2...' &&
        apk add --no-cache ca-certificates curl &&
        echo '‚è≥ Aguardando PostgreSQL...' &&
        sleep 10 &&
        echo '‚ñ∂Ô∏è  Iniciando aplica√ß√£o Go...' &&
        chmod +x ./main &&
        ./main
      "
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - deploy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PgAdmin (opcional - apenas para desenvolvimento)
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_ci
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@email.com"
      PGADMIN_DEFAULT_PASSWORD: "123456"
    ports:
      - "54321:80"
    depends_on:
      - postgres
    profiles:
      - dev
      - pgadmin

volumes:
  postgres_data:

networks:
  default:
    driver: bridge
