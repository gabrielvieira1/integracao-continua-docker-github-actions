#!/bin/bash

# Script MESTRE para criar TODA a infraestrutura (EC2 + RDS + ECS + ALB)
# Cria nova infraestrutura usando m√≥dulos Terraform

set -e

echo "üöÄ Script de Infraestrutura: CRIAR INFRAESTRUTURA"
echo "================================================="

echo "üöÄ Criando TODA a infraestrutura: EC2 + RDS + ECS + ALB"
echo "======================================================="

# Configura√ß√µes
ENVIRONMENT="dev"
AWS_REGION="us-east-1"
TERRAFORM_DIR="../terraform/environments/${ENVIRONMENT}"

# Verifica√ß√µes
if ! command -v terraform &> /dev/null; then
    echo "‚ùå Terraform n√£o est√° instalado."
    exit 1
fi

if ! aws sts get-caller-identity &> /dev/null; then
    echo "‚ùå AWS CLI n√£o est√° configurado."
    exit 1
fi

cd "$TERRAFORM_DIR"

echo "üìÅ Diret√≥rio: $(pwd)"
echo "üîß Ambiente: $ENVIRONMENT"
echo "üåé Regi√£o: $AWS_REGION"
echo ""

# Mostrar o que ser√° criado
echo "üì¶ RECURSOS QUE SER√ÉO CRIADOS:"
echo "   ‚îú‚îÄ‚îÄ üîí Security Groups (API e RDS) - compartilhados"
echo "   ‚îú‚îÄ‚îÄ üñ•Ô∏è  EC2 Instance (t2.micro)"
echo "   ‚îú‚îÄ‚îÄ üóÑÔ∏è  RDS PostgreSQL (db.t4g.micro)"
echo "   ‚îú‚îÄ‚îÄ üê≥ ECS Cluster"
echo "   ‚îú‚îÄ‚îÄ üìã ECS Task Definition"
echo "   ‚îú‚îÄ‚îÄ üîÑ ECS Service"
echo "   ‚îú‚îÄ‚îÄ ‚öñÔ∏è  Application Load Balancer"
echo "   ‚îú‚îÄ‚îÄ üéØ Target Group"
echo "   ‚îî‚îÄ‚îÄ üë§ IAM Roles"
echo ""

# Inicializar Terraform
echo "üîÑ Inicializando Terraform..."
terraform init

# Validar configura√ß√£o
echo "‚úÖ Validando configura√ß√£o..."
terraform validate

# Planejar mudan√ßas
echo "üìã Planejando infraestrutura completa..."
terraform plan

echo ""
echo "üí∞ ESTIMATIVA DE CUSTOS (por m√™s):"
echo "   - EC2 t2.micro: ~$8.50"
echo "   - RDS db.t4g.micro: ~$12.00"
echo "   - ECS Fargate (1 task): ~$6.00"
echo "   - ALB: ~$16.00"
echo "   - TOTAL ESTIMADO: ~$42.50/m√™s"
echo ""

# Confirma√ß√£o
read -p "ü§î Deseja criar TODA a infraestrutura? (y/N): " -n 1 -r
echo ""

if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üöÄ Criando infraestrutura completa..."
    terraform apply -auto-approve
    
    echo ""
    echo "‚úÖ INFRAESTRUTURA COMPLETA CRIADA COM SUCESSO!"
    echo ""
    
    # Capturar outputs importantes
    echo "üìä RECURSOS CRIADOS:"
    echo "==================="
    terraform output
    
    echo ""
    echo "üåê URLS DE ACESSO:"
    echo "=================="
    EC2_URL=$(terraform output -raw ec2_application_url 2>/dev/null || echo "n√£o dispon√≠vel")
    ECS_ALB_DNS=$(terraform output -raw alb_dns_name 2>/dev/null || echo "n√£o dispon√≠vel")
    
    # URLs corretas baseadas na configura√ß√£o atual
    if [ "$EC2_URL" != "n√£o dispon√≠vel" ]; then
        echo "üñ•Ô∏è  EC2 Strategy: $EC2_URL"
    else
        echo "üñ•Ô∏è  EC2 Strategy: n√£o dispon√≠vel"
    fi
    
    if [ "$ECS_ALB_DNS" != "n√£o dispon√≠vel" ]; then
        echo "üê≥ ECS Strategy: http://$ECS_ALB_DNS:8000"
    else
        echo "üê≥ ECS Strategy: n√£o dispon√≠vel"
    fi
    
    echo ""
    echo "üîç HEALTH CHECKS:"
    echo "================="
    if [ "$EC2_URL" != "n√£o dispon√≠vel" ]; then
        echo "üñ•Ô∏è  EC2 Health: $EC2_URL/health"
    else
        echo "üñ•Ô∏è  EC2 Health: n√£o dispon√≠vel"
    fi
    
    if [ "$ECS_ALB_DNS" != "n√£o dispon√≠vel" ]; then
        echo "üê≥ ECS Health: http://$ECS_ALB_DNS:8000/health"
    else
        echo "üê≥ ECS Health: n√£o dispon√≠vel"
    fi
    
    echo ""
    echo "üìã INFORMA√á√ïES PARA GITHUB ACTIONS:"
    echo "===================================="
    CLUSTER_NAME=$(terraform output -raw ecs_cluster_name 2>/dev/null || echo "n√£o dispon√≠vel")
    SERVICE_NAME=$(terraform output -raw ecs_service_name 2>/dev/null || echo "n√£o dispon√≠vel")
    TASK_FAMILY=$(terraform output -raw ecs_task_definition_family 2>/dev/null || echo "n√£o dispon√≠vel")
    ALB_NAME=$(terraform output -raw alb_name 2>/dev/null || echo "n√£o dispon√≠vel")
    
    echo "   - ECS_CLUSTER_NAME: $CLUSTER_NAME"
    echo "   - ECS_SERVICE_NAME: $SERVICE_NAME"
    echo "   - ECS_TASK_FAMILY: $TASK_FAMILY"
    echo "   - ALB_NAME: $ALB_NAME"
    
    echo ""
    echo "üéØ PR√ìXIMOS PASSOS:"
    echo "=================="
    echo "1. ‚úÖ Fa√ßa push no GitHub para testar os workflows"
    echo "2. ‚úÖ Acesse as URLs acima para verificar as aplica√ß√µes"
    echo "3. ‚úÖ Compare o comportamento entre EC2 e ECS"
    echo "4. ‚úÖ Monitore os custos no AWS Console"
    
    echo ""
    echo "üóëÔ∏è  Para destruir tudo posteriormente:"
    echo "   ./destroy_unified_terraform.sh"
    
else
    echo "‚ùå Opera√ß√£o cancelada."
    exit 1
fi

echo ""
echo "üéâ INFRAESTRUTURA COMPLETA PRONTA!"