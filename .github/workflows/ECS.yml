name: Entrega continua

on:
  workflow_call:

jobs:
  ECS:
    runs-on: ubuntu-latest
    environment: PROD
    steps:
      - name: configurando credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: us-east-1

      - name: Obtendo arquivo da tarefa
        run: aws ecs describe-task-definition --task-definition Tarefa_API-GO --query taskDefinition > task-definition.json

      - name: copia do task-definition
        run: cp task-definition.json task-definition.json.old

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: Go
          image: ${{ secrets.USERNAME_DOCKER_HUB }}/go_ci:${{github.run_number}}
          environment-variables: |
            HOST=${{ secrets.DB_HOST_PROD }}
            DB_USER=${{ secrets.DB_USER_PROD }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD_PROD }}
            DB_NAME=${{ secrets.DB_NAME_PROD }}
            DB_PORT=${{ secrets.DB_PORT_PROD }}
            PORT=8000

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: Servico_API-Go
          cluster: API-Go
          wait-for-service-stability: true

      - name: Health Check Test
        continue-on-error: true
        run: |
          echo "REQUEST=0" >> $GITHUB_ENV
          sleep 30s
          curl -f http://LB-API-Go-908865819.us-east-1.elb.amazonaws.com:8000/health || echo "REQUEST=1" >> $GITHUB_ENV

      - name: Rollback if health check failed
        if: ${{ env.REQUEST != 0 }}
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json.old
          service: Servico_API-Go
          cluster: API-Go
          wait-for-service-stability: true
