apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-api
  labels:
    app: go-api
    component: backend
    environment: local
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: go-api
  template:
    metadata:
      labels:
        app: go-api
        component: backend
        environment: local
    spec:
      containers:
      - name: go
        image: bielvieira/go_ci:40
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: HOST
          valueFrom:
            secretKeyRef:
              name: database-config
              key: host
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: database-config
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-config
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: database-config
              key: dbname
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: database-config
              key: port
        - name: PORT
          value: "8000"
        
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Health checks usando o endpoint /health
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      
      restartPolicy: Always
